package br.com.tkzi.connections;

import org.springframework.amqp.core.AmqpAdmin;
import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.BindingBuilder;
import org.springframework.amqp.core.DirectExchange;
import org.springframework.amqp.core.Queue;
import org.springframework.stereotype.Component;

import br.com.tkzi.constantes.RabbitmqConstantes;

@Component
public class RabbitMqConnection {

	private static final String NOME_EXCHANGE = "amq.direct";
	private final AmqpAdmin amqpAdmin;

	public RabbitMqConnection(AmqpAdmin amqpAdmin) {
		this.amqpAdmin = amqpAdmin;
	}

	private Queue fila(String nomeDaFila) {

		return new Queue(nomeDaFila, true, false, false);
	}

	private DirectExchange exchange() {

		return new DirectExchange(NOME_EXCHANGE);
	}

	private Binding relacionamento(Queue fila, DirectExchange exchange) {
		return BindingBuilder.bind(fila).to(exchange).with(fila.getName());
		// faz o binding da fila com a exchange pela routingKey que Ã© o nome da fila 
	}

	private void adiciona(String nomeFila) {
		
		Queue filaEstoque = this.fila(RabbitmqConstantes.FILA_ESTOQUE);
		Queue filaPreco = this.fila(RabbitmqConstantes.FILA_PRECO);

		DirectExchange exchange = this.exchange();

		/*faz as binding da fila de estoque com a exchange e da fila preco com a exchange
		ambas sendo mapeadas pela routing fila.nome */
		Binding ligacaoEstoque = this.relacionamento(filaEstoque, exchange);
		Binding ligacaoPreco = this.relacionamento(filaPreco, exchange);
		
		//criando as filas no rabbit
		this.amqpAdmin.declareQueue(filaEstoque);
		this.amqpAdmin.declareQueue(filaPreco);
		
		this.amqpAdmin.declareExchange(exchange);
		
		this.amqpAdmin.declareBinding(ligacaoEstoque);
		
	}

}
